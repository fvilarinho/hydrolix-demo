credentials = {
  linodeToken          = "<linodeToken>"
  edgeGridAccountKey   = "<edgeGridAccountKey>"
  edgeGridHost         = "<edgeGridHost>"
  edgeGridAccessToken  = "<edgeGridAccessToken>"
  edgeGridClientToken  = "<edgeGridClientToken>"
  edgeGridClientSecret = "<edgeGridClientSecret>"
}

settings = {
  general = {
    email  = "<email>"
    domain = "<domain>"

    certificate = {
      organization     = "<organization>"
      organizationUnit = "<organizationUnit>"
      street           = "<street>"
      zipcode          = "<zipcode>"
      city             = "<city>"
      region           = "<region>"
      country          = "<country>"
      keyFilename      = "../etc/tls/cert.key"
      pemFilename      = "../etc/tls/cert.pem"
      validityHours    = 86400
    }
  }

  akamai = {
    contract = "<contract>"
    group    = "<group>"

    property = {
      name          = "hydrolix-demo"
      product       = "prd_Fresca"
      ipVersion     = "<ipVersion>"
      notes         = "Initial configuration."
      rulesFilename = "../etc/akamai/property/rules/main.json"
    }

    datastream = {
      prefix       = "hydrolix-demo"
      pushInterval = 30

      properties = [
        "<propertyName>"
      ]
    }
  }

  hydrolix = {
    prefix             = "hydrolix"
    tags               = [ "hydrolix", "observability" ]
    namespace          = "hydrolix"
    version            = "<version>"
    region             = "<region>"
    nodeType           = "<nodeType>"
    minNodeCount       = 4
    maxNodeCount       = 10
    kubeconfigFilename = "../etc/hydrolix/.kubeconfig"
    operatorFilename   = "../etc/hydrolix/operator.yml"
    manifestFilename   = "../etc/hydrolix/manifest.yml"
    projectFilename    = "../etc/hydrolix/project.json"
    tableFilename      = "../etc/hydrolix/table.json"
    transformFilename  = "../etc/hydrolix/transform.json"
    password           = "<password>"
  }

  grafana = {
    prefix                = "grafana"
    tags                  = [ "dataviz", "observability" ]
    region                = "<region>"
    nodeType              = "<nodeType>"
    nodeImage             = "<nodeImage>"
    sshPrivateKeyFilename = "~/.ssh/id_rsa"
    sshPublicKeyFilename  = "~/.ssh/id_rsa.pub"
    defaultPassword       = "<defaultPassword>"
  }

  probes = {
    prefix                = "probe"
    tags                  = [ "probes", "observability" ]
    nodeType              = "<nodeType>"
    nodeImage             = "<nodeImage>"
    sshPrivateKeyFilename = "~/.ssh/id_rsa"
    sshPublicKeyFilename  = "~/.ssh/id_rsa.pub"
    defaultPassword       = "<defaultPassword>"

    storage = {
      prefix                = "storage"
      tags                  = [ "probes", "storage", "observability" ]
      region                = "<region>"
      nodeType              = "<nodeType>"
      nodeImage             = "<nodeImage>"
      sshPrivateKeyFilename = "~/.ssh/id_rsa"
      sshPublicKeyFilename  = "~/.ssh/id_rsa.pub"
    }

    securityTests = {
      prefix                = "security"
      tags                  = [ "probes", "security", "observability" ]
      region                = "<region>"
      nodeType              = "<nodeType>"
      nodeImage             = "<nodeImage>"
      sshPrivateKeyFilename = "~/.ssh/id_rsa"
      sshPublicKeyFilename  = "~/.ssh/id_rsa.pub"
    }

    tests = [
      {
        id          = 1
        region      = "<region>"
        url         = "<url>"
        browser     = "<browser>"
        pollingTime = 1
      }
    ]
  }
}