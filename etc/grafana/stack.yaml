---
apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  ports:
    - name: http
      port: 3000
      targetPort: 3000
  selector:
    app: grafana
---
apiVersion: v1
kind: Service
metadata:
  name: ingress
spec:
  ports:
    - name: http
      port: 80
      targetPort: 80
    - name: https
      port: 443
      targetPort: 443
  selector:
    app: ingress
  type: LoadBalancer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
        - name: grafana
          image: grafana/grafana:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 250m
              memory: 750Mi
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana
      volumes:
        - name: grafana
          persistentVolumeClaim:
            claimName: grafana
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: ingress
  labels:
    app: ingress
spec:
  selector:
    matchLabels:
      app: ingress
  template:
    metadata:
      labels:
        app: ingress
    spec:
      restartPolicy: Always
      containers:
        - name: ingress
          image: nginx:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 80
            - containerPort: 443
          volumeMounts:
            - name: ingress-settings
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: ingress.conf
            - name: ingress-tls-certificate
              mountPath: /etc/tls/fullchain.pem
              subPath: fullchain.pem
            - name: ingress-tls-certificate-key
              mountPath: /etc/tls/privkey.pem
              subPath: privkey.pem
      volumes:
        - name: ingress-settings
          configMap:
            name: ingress-settings
        - name: ingress-tls-certificate
          configMap:
            name: ingress-tls-certificate
        - name: ingress-tls-certificate-key
          configMap:
            name: ingress-tls-certificate-key